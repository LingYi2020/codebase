<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE en-export SYSTEM "http://xml.evernote.com/pub/evernote-export2.dtd">
<en-export export-date="20210119T005812Z" application="Evernote/Windows" version="6.x">
<note><title>day22</title><content><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE en-note SYSTEM "http://xml.evernote.com/pub/enml2.dtd">

<en-note><div><span style="font-size: 14pt; color: rgb(227, 0, 0); font-weight: bold;">jQuery简介</span></div><div><br/></div><div><span style="font-size: 14pt;">jQuery也就是JavaScript和查询（Query）即 辅助JavaScript开发的类库。</span></div><div><span style="font-size: 14pt;">jQuery是一个兼容多浏览器的javascript库。</span></div><div><br/></div><div><span style="font-size: 14pt; color: rgb(227, 0, 0);">核心理念是 write less,do more (写得更少,做得更多)。</span></div><div><br/></div><div><span style="font-size: 14pt;">jQuery在2006年1月由美国人John Resig在纽约的barcamp发布，吸引了来自世界各地的众多JavaScript高手加入。</span></div><div><span style="font-size: 14pt;">曾经，jQuery是最流行的JavaScript库，在世界前10000个访问最多的网站中，有超过55%在使用jQuery！</span></div><div><br/></div><div><span style="font-size: 14pt; color: rgb(227, 0, 0);">jQuery的优点</span><span style="font-size: 14pt;">：轻量级、强大的选择器、出色的DOM操作、可靠的事件处理机制、完善的Ajax、出色的浏览器兼容性、便捷的链式操作、丰富的插件支持、完善的文档、学习成本低、开源 等等</span></div><div><br/></div><div><span style="font-size: 14pt;">大多数 JavaScript 类库一般都具备的特性包括：</span></div><div><span style="font-size: 14pt;">选择器（Selector）、DOM操作、实用函数、事件处理、Ajax等</span></div><div><br/></div><div><br/></div><div><span style="font-size: 14pt; color: rgb(227, 0, 0); font-weight: bold;">jQuery使用</span></div><div><br/></div><div><span style="font-size: 14pt;">进入jQuery官网或其他平台下载jQuery文件，并且引入页面：</span></div><div><span style="font-size: 14pt;">&lt;script type=&quot;text/javascript&quot; src=&quot;js/jquery-1.8.3.min.js&quot;&gt;&lt;/script&gt;</span></div><div><br/></div><div><span style="font-size: 14pt;">下载:&nbsp;</span><a href="http://www.jq22.com/jquery-info122" style="font-size: 14pt;">http://www.jq22.com/jquery-info122</a></div><div><br/></div><div><span style="font-size: 14pt;">通常每个版本号有两个版本可供下载</span></div><div><span style="font-size: 14pt;">生产版 - 用于实际的网站中，已被精简和压缩</span></div><div><span style="font-size: 14pt;">开发版 - 用于测试和开发，未压缩，是可读的代码</span></div><div><br/></div><div><span style="font-size: 14pt; color: rgb(227, 0, 0);">注意：2.0及之后的版本，不再兼容 IE 6 7 8</span></div><div><br/></div><div><span style="font-size: 14pt;">也可以引入服务器上的jQuery文件</span></div><div><span style="font-size: 14pt;">&lt;script type=“text/javascript” src=&quot;</span><a href="http://ajax.googleapis.com/ajax/libs/jquery/2.1.0/jquery.min.js" style="font-size: 14pt; color: rgb(54, 101, 238);">http://ajax.googleapis.com/ajax/libs/jquery/2.1.0/jquery.min.js</a><span style="font-size: 14pt;">&quot;&gt;&lt;/script&gt;</span></div><div><span style="font-size: 14pt;">&lt;script type=&quot;text/javascript&quot; src=&quot;</span><a href="http://libs.baidu.com/jquery/2.0.3/jquery.min.js" style="font-size: 14pt; color: rgb(54, 101, 238);">http://libs.baidu.com/jquery/2.0.3/jquery.min.js</a><span style="font-size: 14pt;">&quot;&gt;&lt;/script&gt;</span></div><div>bootcdn资源：<a href="https://www.bootcdn.cn/jquery/">https://www.bootcdn.cn/jquery/</a></div><div><br/></div><div><br/></div><div><span style="font-size: 14pt;">在jQuery库中，$ 就是jQuery的一个简写形式（别称）</span></div><div><span style="font-size: 14pt;">例如： $(“#nan”) === jQuery(“#nan”)</span></div><div><br/></div><div><span style="font-size: 14pt;">当浏览器解析完DOM之后，执行ready小括号内的函数&nbsp;</span></div><div><span style="font-size: 14pt;">$(document).ready( function () { …} )</span></div><div><span style="font-size: 14pt;">可简写为：$(function () {…} )</span></div><div><br/></div><div><br/></div><div><span style="font-size: 14pt; color: rgb(227, 0, 0); font-weight: bold;">jQuery选择器</span></div><div><br/></div><div><span style="font-size: 14pt;">选择器：简洁的写法，支持CSS1到CSS3的选择器</span></div><div><br/></div><div><span style="font-size: 14pt;">$(“#test”)选取id为test的元素---单个元素</span></div><div><span style="font-size: 14pt;">$(“.test”)选取所有class为test的元素---元素集合</span></div><div><span style="font-size: 14pt;">$(“div”)选取所有的&lt;div&gt;元素---元素集合</span></div><div><span style="font-size: 14pt;">$(“div&nbsp;&nbsp;span”)选取&lt;div&gt;里的所有的&lt;span&gt;(可以选到子和孙所有元素)元素---元素集合</span></div><div><span style="font-size: 14pt;">$(“div:first”)选取所有&lt;div&gt;元素中第1个&lt;div&gt;元素---单个元素</span></div><div><span style="font-size: 14pt;">$(“div:last”)选取所有&lt;div&gt;元素中最后一个&lt;div&gt;元素---单个元素</span></div><div><span style="font-size: 14pt;">$(“input:even”)选取索引(索引从0开始,0算为偶数)是偶数的&lt;input&gt;元素---元素集合</span></div><div><span style="font-size: 14pt;">$(“input:odd”)选取索引(索引从0开始)是奇数的&lt;input&gt;元素---元素集合</span></div><div><span style="font-size: 14pt;">$(“div[title=test]”)选取属性title为“test”的&lt;div&gt;元素---元素集合</span></div><div><span style="font-size: 14pt;">$(“div:nth-child(1)”) 选取所有div中，是其父标签的第一个子元素的div元素---元素集合</span></div><div>$(&quot;a:contains(&apos;x&apos;)&quot;)&nbsp;&nbsp;&nbsp;选取出含内容x的a标签</div><div><span style="font-size: 14pt;">.......</span></div><div><br/></div><div><br/></div><div><br/></div><div><span style="font-size: 14pt; color: rgb(227, 0, 0); font-weight: bold;">jQuery DOM</span></div><div><br/></div><div><span style="font-size: 14pt; color: rgb(54, 101, 238);">创建节点:</span></div><div><span style="font-size: 14pt;">运用传统的javascript方法，创建一个div节点：</span></div><div><span style="font-size: 14pt;">var newDiv = document.createElement(‘div’);</span></div><div><span style="font-size: 14pt;">newDiv.innerText = &apos; 新建节点&apos;;</span></div><div><br/></div><div><span style="font-size: 14pt;">jQuery中创建一个div节点：</span></div><div><span style="font-size: 14pt;">$(‘&lt;div&gt;新建节点&lt;/div&gt;’);</span></div><div><br/></div><div><span style="font-size: 14pt; color: rgb(54, 101, 238);">插入节点:</span></div><div><span style="font-size: 14pt;">用javascript方法，插入一个节点：</span></div><div><span style="font-size: 14pt;">var Newp = document.createElement(“p”);</span></div><div><span style="font-size: 14pt;">document.body.appendChild(Newp);</span></div><div><br/></div><div><span style="font-size: 14pt;">jQuery中插入节点：例：$( a ).append( c );</span></div><div><span style="font-size: 14pt;">append&nbsp;&nbsp;------a里末尾插c</span></div><div><span style="font-size: 14pt;">appendTo&nbsp;&nbsp;---c插到a里末尾</span></div><div><span style="font-size: 14pt;">prepend ------a里前面插c</span></div><div><span style="font-size: 14pt;">prependTo ---c插到a里前面</span></div><div><br/></div><div><span style="font-size: 14pt;">after-----------a之后插c</span></div><div><span style="font-size: 14pt;">insertAfter ----c插到a之后</span></div><div><span style="font-size: 14pt;">before --------a之前插c</span></div><div><span style="font-size: 14pt;">insertBefore --c插到a之前</span></div><div><br/></div><div><span style="font-size: 14pt; color: rgb(54, 101, 238);">删除节点:</span></div><div><span style="font-size: 14pt;">用javascript方法，删除一个节点：</span></div><div><span style="font-size: 14pt;">var b = document.getElementById(“test”);</span></div><div><span style="font-size: 14pt;">var c = b.parentNode;</span></div><div><span style="font-size: 14pt;">c.removeChild(b);</span></div><div><br/></div><div><span style="font-size: 14pt;">jQuery中删除节点：</span></div><div><span style="font-size: 14pt;">$(&apos;#test&apos;).remove();</span></div><div><span style="font-size: 14pt;">remove() 删除节点</span></div><div><span style="font-size: 14pt;">empty() 清空节点内容</span></div><div><span style="font-size: 14pt;">detach()&nbsp;</span><span style="font-size: 14pt;">移除被选元素，包括所有的文本和子节点，返回</span><span style="font-size: 14pt;">移除元素的副本</span></div><div><br/></div><div><span style="font-size: 14pt; color: rgb(54, 101, 238);">替换节点:</span></div><div><span style="font-size: 14pt;">用javascript方法，替换节点：</span></div><div><span style="font-size: 14pt;">parent.replaceChild( newNode , oldNode );</span></div><div><br/></div><div><span style="font-size: 14pt;">jQuery中替换节点：</span></div><div><span style="font-size: 14pt;">$(“&lt;p&gt;替换 &lt;/p&gt;”).replaceAll(“#test1″);</span></div><div><br/></div><div><span style="font-size: 14pt; color: rgb(54, 101, 238);">复制节点:</span></div><div><span style="font-size: 14pt;">运用传统的javascript方法，复制一个节点：</span></div><div><span style="font-size: 14pt;">var&nbsp;txt = document.querySelector(&quot;p&quot;);</span></div><div><span style="font-size: 14pt;">var&nbsp;clonep = txt.cloneNode(true);</span></div><div><span style="font-size: 14pt;">document.body.appendChild(clonep);</span></div><div><br/></div><div><span style="font-size: 14pt;">jQuery中复制一个节点：</span></div><div><span style="font-size: 14pt;">var clone_a = a.clone(true);&nbsp;&nbsp;深复制包括事件处理程序</span></div><div><span style="font-size: 14pt;">$(&apos;body&apos;).append(clone_a);</span></div><div><br/></div><div><span style="font-size: 14pt; color: rgb(54, 101, 238);">常用方法:</span></div><div><span style="font-size: 14pt;">.children() 获得匹配元素集合中每个元素的所有子元素</span></div><div><span style="font-size: 14pt;">.next() 获得匹配元素集合中每个元素的下一个同辈元素</span></div><div><span style="font-size: 14pt;">.prev() 获得匹配元素集合中每个元素紧邻的上一个同辈元素</span></div><div><span style="font-size: 14pt;">.parent() 获得当前匹配元素集合中每个元素的父元素</span></div><div><span style="letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; font-size: 14pt; color: rgb(51, 51, 51); font-variant-caps: normal; font-variant-ligatures: normal;">.closest() 从当前元素开始，返回最先匹配到的符合条件的父元素</span></div><div><span style="font-size: 14pt;">.find(child) 获得当前匹配元素集合中每个元素的后代</span></div><div><span style="font-size: 14pt;">.siblings() 获得匹配元素集合中所有元素的同辈元素</span></div><div><span style="font-size: 14pt;">.</span><span style="letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(253, 252, 248); font-size: 14pt; color: rgb(0, 0, 0); font-variant-caps: normal; font-variant-ligatures: normal;">eq() 匹配元素集合中指定索引的一个元素</span></div><div><span style="letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(253, 252, 248); font-size: 14pt; color: rgb(0, 0, 0); font-variant-caps: normal; font-variant-ligatures: normal;">.</span> <span style="letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(253, 252, 248); font-size: 14pt; color: rgb(0, 0, 0); font-variant-caps: normal; font-variant-ligatures: normal;">index() 方法返回指定元素相对于其他指定元素的 index 位置</span></div><div><span style="font-size: 14pt;">.end() 将匹配的元素变为前一次的状态</span></div><div><span style="font-size: 14pt;">.each() 循环，为每个匹配的元素执行函数</span></div><div><span style="font-size: 14pt;">.is() 根据选择器、元素或 jQuery 对象来检测匹配元素集合，如果有元素匹配给定的参数，则返回 true</span></div><div><span style="font-size: 14pt;">.addClass() 为每个匹配的元素添加指定的类名&nbsp; &nbsp; add()</span></div><div><span style="font-size: 14pt;">.removeClass() 从匹配的元素中删除全部或者指定的类&nbsp; remove()</span></div><div><span style="font-size: 14pt;">.toggleClass() 从匹配的元素中添加或删除一个类&nbsp; &nbsp; &nbsp;toggle()</span></div><div><span style="font-size: 14pt;">.hasClass() 检查元素是否含有某个特定的类，有则返回true&nbsp; &nbsp; &nbsp;contains()</span></div><div><br/></div><div><span style="font-size: 14pt;">.attr() 设置或返回被选元素的属性和值</span></div><div><span style="font-size: 14pt;">.prop() 设置或返回被选元素的属性和值</span></div><div><span style="font-size: 14pt; color: rgb(227, 0, 0);">注意：prop() 方法应该用于检索属性值，例如 DOM 属性（如 selectedIndex, tagName, nodeName, nodeType, ownerDocument, defaultChecked, 和 defaultSelected）。</span></div><div><span style="font-size: 14pt; color: rgb(227, 0, 0);">提示：如需检索 HTML 属性，请使用 attr() 方法代替。</span></div><div><br/></div><div><span style="font-size: 14pt;">.removeAttr() 从每一个匹配的元素中删除一个属性</span></div><div><span style="font-size: 14pt;">.html() 设置或取得第一个匹配元素的html内容</span></div><div><span style="font-size: 14pt;">.text() 设置或取得第一个匹配元素的文本内容</span></div><div><span style="font-size: 14pt;">.val() 设置或返回匹配元素的值(表单元素)</span></div><div><span style="font-size: 14pt;">.css() 设置或返回匹配元素的样式属性</span></div><div><span style="font-size: 14pt;">.width() 设置或返回匹配元素的宽度</span></div><div><span style="font-size: 14pt;">.height() 设置或返回匹配元素的高度</span></div><div><span style="font-size: 14pt;">.scrollLeft() 设置或返回匹配元素相对滚动条左侧的偏移</span></div><div><span style="font-size: 14pt;">.scrollTop() 设置或返回匹配元素相对滚动条顶部的偏移</span></div><div><span style="font-size: 14pt;">.position() 获取匹配元素相对于定位父元素的偏移&nbsp; {left: 40,&nbsp; top: 50}</span></div><div><span style="font-size: 14pt;">.offset() 获取或设置匹配元素在当前视口的相对偏移&nbsp;&nbsp;</span><span style="font-size: 14pt;">{left: 40,&nbsp; top: 50}</span></div><div><span style="font-size: 14pt;">. wrap()&nbsp;</span><span style="font-size: 14pt;">使用指定的 HTML 元素来包裹每个被选元素</span></div><div><span style="font-size: 14pt;">$(&quot;p&quot;).wrap(&quot;&lt;div&gt;&lt;/div&gt;&quot;); // 给每个P元素包裹一个div元素</span></div><div><span style="font-size: 14pt;">......</span></div><div><span style="font-size: 14pt;">$.trim( str ) 函数会移除字符串开始和末尾处的所有空白字符</span></div><div><span style="font-size: 14pt;">$.each() 遍历数组</span></div><div><span style="font-size: 14pt;">$.each(data,function (index,value) {</span></div><div><span style="font-size: 14pt;">&nbsp; &nbsp; console.log(&apos;数组当前元素的索引&apos; + index);</span></div><div><span style="font-size: 14pt;">&nbsp;&nbsp; &nbsp;</span><span style="font-size: 14pt;">console.log(&apos;数组当前元素的值&apos; + value);</span></div><div><span style="font-size: 14pt;">});</span></div><div><br/></div><div><span style="font-size: 14pt; color: rgb(227, 0, 0); font-weight: bold;">jQuery动画</span></div><div><br/></div><div><span style="font-size: 14pt; color: rgb(54, 101, 238);">展开／收起:</span></div><div><span style="font-size: 14pt;">slideUp(null/speed , easing , fn);&nbsp;&nbsp;&nbsp;收起</span></div><div><span style="font-size: 14pt;">slideDown(null/speed , easing , fn);&nbsp;&nbsp;&nbsp;展开</span></div><div><span style="font-size: 14pt;">参数：可选</span></div><div><span style="font-size: 14pt;">null：不传参，执行默认效果</span></div><div><span style="font-size: 14pt;">speed：&apos;slow&apos;|&apos;normal&apos;|&apos;fast&apos; 或 毫秒数</span></div><div><span style="font-size: 14pt;">easing：指定动画效果，默认是&quot;swing&quot;，可扩展 linear</span></div><div><span style="font-size: 14pt;">fn：回调函数，当动画执行完毕以后执行</span></div><div><br/></div><div><span style="font-size: 14pt;">示例</span></div><div><span style="font-size: 14pt;">$(&apos;#con&apos;).slideDown( 1000 , &apos;swing&apos; , function (){ alert(&apos;123&apos;); } );</span></div><div><span style="font-size: 14pt;">$(&apos;#con&apos;).slideUp({</span></div><div><span style="font-size: 14pt;">&nbsp; &nbsp; &nbsp; &nbsp;duration:1000,</span></div><div><span style="font-size: 14pt;">&nbsp; &nbsp; &nbsp; &nbsp;easing:&apos;easeOutElastic&apos;,</span></div><div><span style="font-size: 14pt;">&nbsp; &nbsp; &nbsp; &nbsp;complete:function (){</span></div><div><span style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alert(&apos;再见~&apos;);</span></div><div><span style="font-size: 14pt;">&nbsp; &nbsp; &nbsp; &nbsp;}</span></div><div><span style="font-size: 14pt;">});</span></div><div><br/></div><div><span style="font-size: 14pt; color: rgb(54, 101, 238);">反转开关:（显示/隐藏）</span></div><div><span style="font-size: 14pt;">toggle(null/speed , easing , fn);</span></div><div><span style="font-size: 14pt;">参数：可选</span></div><div><span style="font-size: 14pt;">null：不传参，执行默认效果</span></div><div><span style="font-size: 14pt;">speed：&apos;slow&apos;|&apos;normal&apos;|&apos;fast&apos; 或 毫秒数</span></div><div><span style="font-size: 14pt;">easing：指定动画效果，默认是&quot;swing&quot;，可扩展</span></div><div><span style="font-size: 14pt;">fn：回调函数，当动画执行完毕以后执行</span></div><div><br/></div><div><span style="font-size: 14pt;">1.用于绑定两个或多个事件处理器函数，以响应被选元素轮流的 click 事件</span></div><div><span style="font-size: 14pt;">2.如果元素是可见的，切换为隐藏的；如果元素是隐藏的，切换为可见的</span></div><div><br/></div><div><span style="font-size: 14pt; color: rgb(54, 101, 238);">显示隐藏：</span></div><div><span style="font-size: 14pt;">show(null/speed , easing , fn);&nbsp;&nbsp;&nbsp;显示</span></div><div><span style="font-size: 14pt;">hide(null/speed , easing , fn);&nbsp;&nbsp;&nbsp;隐藏</span></div><div><span style="font-size: 14pt;">参数：可选</span></div><div><span style="font-size: 14pt;">null：不传参，执行默认效果</span></div><div><span style="font-size: 14pt;">speed：&apos;slow&apos;|&apos;normal&apos;|&apos;fast&apos; 或 毫秒数</span></div><div><span style="font-size: 14pt;">easing：指定动画效果，默认是&quot;swing&quot;，可扩展</span></div><div><span style="font-size: 14pt;">fn：回调函数，当动画执行完毕以后执行</span></div><div><br/></div><div><span style="font-size: 14pt; color: rgb(54, 101, 238);">淡入淡出：</span></div><div><span style="font-size: 14pt;">fadeIn(null/speed , easing , fn);&nbsp;&nbsp;&nbsp;淡入</span></div><div><span style="font-size: 14pt;">fadeOut(null/speed , easing , fn);&nbsp;&nbsp;&nbsp;淡出</span></div><div><span style="font-size: 14pt;">参数：可选</span></div><div><span style="font-size: 14pt;">null：不传参，执行默认效果</span></div><div><span style="font-size: 14pt;">speed：&apos;slow&apos;|&apos;normal&apos;|&apos;fast&apos; 或 毫秒数</span></div><div><span style="font-size: 14pt;">easing：指定动画效果，默认是&quot;swing&quot;，可扩展</span></div><div><span style="font-size: 14pt;">fn：回调函数，当动画执行完毕以后执行</span></div><div><br/></div><div><span style="font-size: 14pt; color: rgb(54, 101, 238);">自定义动画：</span></div><div><span style="font-size: 14pt;">用法一 : animate({styles} , speed , easing , fn)</span></div><div><span style="font-size: 14pt;">参数：可选</span></div><div><span style="font-size: 14pt;">{styles}：一组css设置集合</span></div><div><span style="font-size: 14pt;">speed：&apos;slow&apos;|&apos;normal&apos;|&apos;fast&apos; 或 毫秒数</span></div><div><span style="font-size: 14pt;">easing：指定动画效果，默认是&quot;swing&quot;，可扩展</span></div><div><span style="font-size: 14pt;">fn：回调函数，当动画执行完毕以后执行</span></div><div><span style="font-size: 14pt;">animate( )方法执行css属性集的自定义动画</span></div><div><br/></div><div><span style="font-size: 14pt;">用法二 : animate({styles} ,{queue,duration,easing,complete});</span></div><div><span style="font-size: 14pt;">参数：</span></div><div><span style="font-size: 14pt;">{styles}：一组css设置集合</span></div><div><span style="font-size: 14pt;">queue：是否加入动画队列执行 true/false (默认true)</span></div><div><span style="font-size: 14pt;">duration：定义动画持续时间</span></div><div><span style="font-size: 14pt;">easing：指定动画效果，默认是“swing”，可扩展</span></div><div><span style="font-size: 14pt;">complete：回调函数，当动画执行完毕以后执行</span></div><div><br/></div><div><span style="font-size: 14pt;">可操作属性：</span></div><div><span style="font-size: 14pt;">不是所有的css属性都可以用Jquery动画（animate函数）来动态改变，下面是JQ可以操作的css属性：</span></div><div><span style="font-size: 14pt;">backgroundPosition&nbsp;&nbsp;&nbsp;&nbsp;borderWidth&nbsp;&nbsp;&nbsp;&nbsp;borderBottomWidth</span></div><div><span style="font-size: 14pt;">borderLeftWidth&nbsp;&nbsp;&nbsp;&nbsp;borderRightWidth&nbsp;&nbsp;&nbsp;&nbsp;borderTopWidth</span></div><div><span style="font-size: 14pt;">borderSpacing&nbsp;&nbsp;&nbsp;&nbsp;margin&nbsp;&nbsp;&nbsp;&nbsp;marginBottom&nbsp;&nbsp;&nbsp;&nbsp;marginLeft</span></div><div><span style="font-size: 14pt;">marginRight&nbsp;&nbsp;&nbsp;&nbsp;marginTop&nbsp;&nbsp;&nbsp;&nbsp;outlineWidth&nbsp;&nbsp;&nbsp;&nbsp;padding</span></div><div><span style="font-size: 14pt;">paddingBottom&nbsp;&nbsp;&nbsp;&nbsp;paddingLeft&nbsp;&nbsp;&nbsp;&nbsp;paddingRight</span></div><div><span style="font-size: 14pt;">paddingTop&nbsp;&nbsp;&nbsp;&nbsp;height&nbsp;&nbsp;&nbsp;&nbsp;width&nbsp;&nbsp;&nbsp;&nbsp;maxHeight&nbsp;&nbsp;&nbsp;&nbsp;maxWidth</span></div><div><span style="font-size: 14pt;">minHeight&nbsp;&nbsp;&nbsp;&nbsp;maxWidth&nbsp;&nbsp;&nbsp;&nbsp;font&nbsp;&nbsp;&nbsp;&nbsp;fontSize&nbsp;&nbsp;&nbsp;&nbsp;opacity</span></div><div><span style="font-size: 14pt;">bottom&nbsp;&nbsp;&nbsp;&nbsp;left&nbsp;&nbsp;&nbsp;&nbsp;right&nbsp;&nbsp;&nbsp;&nbsp;top&nbsp;&nbsp;&nbsp;&nbsp;letterSpacing&nbsp;&nbsp;&nbsp;&nbsp;wordSpacing</span></div><div><span style="font-size: 14pt;">lineHeight&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;textIndent&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scrollLeft&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scrollTop</span></div><div><span style="font-size: 14pt;">… …</span></div><div><br/></div><div><span style="font-size: 14pt; color: rgb(54, 101, 238);">停止动画：</span></div><div><span style="font-size: 14pt;">stop()停止当前动画(并不会停止动画队列中剩下的动画)</span></div><div><span style="font-size: 14pt;">stop(true)停止所有动画</span></div><div><span style="font-size: 14pt;">stop(true,true)停止所有动画,并到达当前动画的终点</span></div><div><span style="font-size: 14pt;">$(&quot;#go&quot;).click(function(){</span></div><div><span style="font-size: 14pt;">&nbsp;&nbsp;$(“.block”).animate({left: ‘200px&apos;}, 5000);</span></div><div><span style="font-size: 14pt;">});</span></div><div><span style="font-size: 14pt;">$(&quot;#stop&quot;).click(function(){</span></div><div><span style="font-size: 14pt;">&nbsp;&nbsp;$(&quot;.block&quot;).stop(); //停止当前动画</span></div><div><span style="font-size: 14pt;">});</span></div><div><br/></div><div><br/></div><div><span style="font-size: 14pt; color: rgb(227, 0, 0);">练习</span><span style="font-size: 14pt; color: rgb(227, 0, 0);">使用</span><span style="font-size: 14pt; color: rgb(227, 0, 0);">以上所有常用方法！</span></div><div><br/></div><div><br/></div><div><br/></div></en-note>]]></content><created>20210117T050017Z</created><updated>20210119T005805Z</updated><note-attributes><author>陶舒健</author><source>desktop.win</source><source-application>yinxiang.win32</source-application></note-attributes></note></en-export>
